# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do

    # Increment our build number
    increment_build_number(
      xcodeproj: "ManhattanMatch.xcodeproj"
      )
    
    # Grab current certificates for app store
    match(type: "appstore")

    # This is required for cocoapods dependencies
    cocoapods

    # Build the app - This generates an IPA
    build_app(
      workspace: "ManhattanMatch.xcworkspace", 
      scheme: "ManhattanMatch"
    )

    # Upload to Testflight - Sends the IPA to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )

    # These commands were recommended by Igor's udemy course
    # match(type: "appstore")
    # gym(scheme: "ManhattanMatch")
    # pilot(
    #   skip_to_waiting_for_build_processing: true
    # )

    # These are cleanup steps recommended by Igor's udemy course
    clean_build_artifacts
    commit_version_bump(
      message: "Fastlane iOS: Released new build #{lane_context[SharedValues::BUILD_NUMBER]} [ci skip]",
      xcodeproj: "./ManhattanMatch.xcodeproj",
      force: true
    )
  end

  desc "Deploy to a new release to the app store"
  lane :release do

    increment_build_number(
      xcodeproj: "ManhattanMatch.xcodeproj"
    )

    # Sync certificates and profiles
    match(type: "appstore")

    # Install dependencies using cocoapods
    cocoapods

    # Generate IPA file
    build_app(
      workspace: "ManhattanMatch.xcworkspace",
      scheme: "ManhattanMatch"
    )

    # Upload IPA to ios App Store
    upload_to_app_store(
      submit_for_review: false,
      force: true
    )
  end
  
  desc "Capture ios screenshots"
  desc "Capture ios screenshots"
  lane :screenshots do
    # Screenshots are not supported for React Native. They only work under
    # a few very experimental setups. It is recommended to manually upload
    # screenshots for one iphone of version 7 or greater. Apple will then
    # replicate the screenshots to the other phone versions.
    capture_screenshots(stop_after_first_error: true)
    upload_to_app_store(
      submit_for_review: true,
      force: true
    )
  end
  
  desc ""
  lane :pushNotification do
    pem
  end
  
  
  
end
